// AUTOGENERATED CODE.  DO NOT MODIFY DIRECTLY!  Instead, please modify the util/function/DefaultOnNullArgument.ftl file.
// See the README in the module's src/template directory for details.
package com.linkedin.dagli.util.function;

import com.linkedin.dagli.util.named.Named;
import java.util.Objects;


/**
 * A function class implementing Function7.Serializable<A, B, C, D, E, F, G, R> that returns null if any of
 * the function's inputs are null.
 */
class DefaultOnNullArgument7<A, B, C, D, E, F, G, R> implements Function7.Serializable<A, B, C, D, E, F, G, R>, Named {
  private static final long serialVersionUID = 1;
  private static final int CLASS_HASH = DefaultOnNullArgument7.class.hashCode();
  private final Function7<A, B, C, D, E, F, G, R> _wrapped;

  DefaultOnNullArgument7(Function7<A, B, C, D, E, F, G, R> wrapped) {
    // stacking this wrapper multiple times should be idempotent:
    if (wrapped instanceof DefaultOnNullArgument7) {
      _wrapped = ((DefaultOnNullArgument7) wrapped)._wrapped;
    } else {
      _wrapped = Objects.requireNonNull(wrapped);
    }
  }

  @Override
  public DefaultOnNullArgument7<A, B, C, D, E, F, G, R> safelySerializable() {
    return new DefaultOnNullArgument7<>(
        ((Function7.Serializable<A, B, C, D, E, F, G, R>) _wrapped).safelySerializable());
  }

  @Override
  public R apply(A value1, B value2, C value3, D value4, E value5, F value6, G value7) {
    if (value1 == null || value2 == null || value3 == null || value4 == null || value5 == null || value6 == null
        || value7 == null) {
      return null;
    }
    return _wrapped.apply(value1, value2, value3, value4, value5, value6, value7);
  }

  @Override
  public int hashCode() {
    return CLASS_HASH + _wrapped.hashCode();
  }

  @Override
  public boolean equals(Object obj) {
    if (obj instanceof DefaultOnNullArgument7) {
      return this._wrapped.equals(((DefaultOnNullArgument7) obj)._wrapped);
    }
    return false;
  }

  @Override
  public String toString() {
    return "arg == null ? null : " + Named.getName(_wrapped);
  }

  @Override
  public String getShortName() {
    return "arg == null ? null : " + Named.getShortName(_wrapped);
  }
}
